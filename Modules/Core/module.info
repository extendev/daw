# Module YAML Description
#
# This file provides information that will be used to better describe the module
# Some of the contents are static and shall be specified by the developer directly in this module,
# some of the are generated directly using module inspection
#

name: Core Module
version: 1.0.0
date: 23 May 2012

authors:
    Axel Tessier: core developer

provides:
  - log
  - security
  - cache

objects:
  Module:
  Object:
  User:
    description: "User of the application"
    properties:
        name: "User name"
        username: "Account name"
        password: "Account password MD5 hash"
        email: "Email address"
        active: "Status"
  Operation:
  Provider:

formatters:
    - ExceptionFormatter
    - WebServiceResponseFormatter
    - ServiceResponseFormatter
    - ModuleFormatter
    - OperationFormatter

operations:
    Help:
        object: Core
        operation: Help
        description: "Print application global help"
    Core.Help:
        object: Core
        operation: Help
        description: "Print application global help"
    Version:
        object: Core
        operation: Version
        description: "Get application version"
    Core.Version:
        object: Core
        operation: Version
        description: "Get application version"
    Info:
        object: Core
        operation: Info
        description: "Provide application information"
    Core.Info:
        object: Core
        operation: Info
        description: "Provide application information"
    PhpInfo:
        object: Core
        operation: PhpInfo
        description: "Provide PHP information"
    Core.PhpInfo:
        object: Core
        operation: PhpInfo
        description: "Provide PHP information"
    Provider.List:
        object: Provider
        operation: List
    Module.List:
        object: Module
        operation: List
        description: "List all modules installed on the application"
    Module.Info:
        object: Module
        operation: Info
        description: "Get information on a module installed on the application"
        args:
            name:
                description: "Name of the module to gather information"
                format: string
                validation: required
    Object.List:
        object: Object
        operation: List
        description: "List all objects available on the application"
    Object.Info:
        object: Object
        operation: Info
        description: "Get information on an object available on the application"
        usage: "name=<object name>"
        args:
            name:
                description: "Name of the object to gather information"
                format: string
                validation: required
    Object.OptionList:
        object: Object
        operation: OptionList
        description: "Get option list for this object using properties as key/value"
        args:
            object:
                description: "Name of the object to gather information"
                format: string
                validation: required
            key:
                description: "Property used as key for the option list"
                format: string
                validation: required
            value:
                description: "Property used as value for the option list"
                format: string
                validation: required
    Operation.List:
        object: Operation
        operation: List
        description: "List all operations available on the application"
    Operation.Info:
        object: Operation
        operation: Info
        description: "Get information of an operation"
        usage: 'object=<name> operation=<name> module=<module>'
        args:
            object:
                description: "Name of the object or module to call the operation against"
                format: string
                validation: required
            operation:
                description: "Name of the operation"
                format: string
                validation: required
    # User Management
    User.List:
        description: "Get list of users"
        object: User
        operation: List
    User.Create:
        description: "Add new user"
        object: User
        operation: Create
        usage: 'object=<name> operation=<name> module=<module>'
        args:
            name:
                description: "User name"
                format: string
                validation: required
            username:
                description: "Account name"
                format: string
                validation: required
            password:
                description: "Account password"
                format: string
                hint: "To ensure strong password, ensure to include at least digits, special characters and mix cases."
                validation:
            email:
                description: "Email address"
                format: string
                validation:
                  - required
            active:
                description: "Status"
                format: options
                options:
                    true: "Active"
                    false: "Inactive"
    User.Update:
        description: "Update a user"
        object: User
        operation: Update
        usage: 'user=<username> [username=<username> name=<name> password=<password> email=<email>]'
        args:
            user:
                description: "Username of the account to update"
                format: string
                validation: required
            username:
                description: "New username to be set"
                format: string
            name:
                description: "New account name to be set"
                format: string
            password:
                description: "New account password to be set"
                hint: "To ensure strong password, ensure to include at least digits, special characters and mix cases."
                format: string
            email:
                description: "New email address to be set"
                format: string
                validation: email
    User.Deactivate:
        description: "Disable a user - user will not be able to authenticate till enabled back"
        object: User
        operation: Deactivate
        usage: 'username=<username>'
        args:
            username:
                description: "Account name"
                format: string
                validation: required
    User.Activate:
        description: "Enable a user - user will be able to authenticate"
        object: User
        operation: Activate
        usage: 'username=<username>'
        args:
            username:
                description: "Account name"
                format: string
                validation: required
    User.Delete:
        description: "Delete a user"
        object: User
        operation: Delete
        usage: 'username=<username>'
        args:
            username:
                description: "Account name"
                format: string
                validation: required

